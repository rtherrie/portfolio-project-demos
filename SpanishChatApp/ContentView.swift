//
//  ContentView.swift
//  SpanishChat
//
//  Created by Riana Therrien on 5/31/25.
//

import SwiftUI

struct ContentView: View {
    var body: some View {
        NavigationView {
            VStack(spacing: 0) {
                // title and flag
                VStack(spacing: 0) {
                    Text("SpanishChat")
                        .font(.system(size: 50))
                        .fontWeight(.bold)
                        .multilineTextAlignment(.center)
                    Text("ðŸ‡ªðŸ‡¸")
                        .font(.system(size: 175))
                }
                .frame(maxWidth: .infinity) // center horizontally
                .padding(.bottom, 100)

                // navigation to topic selection
                NavigationLink(destination: TopicView()) {
                    Text("New Chat")
                        .font(.title2)
                        .frame(maxWidth: .infinity)
                        .padding()
                        .background(Color.red)
                        .foregroundColor(.white)
                        .cornerRadius(8)
                }
            }
            .padding()
            .background(Color.white)
        }
        .preferredColorScheme(.light)
    }
}

struct TopicView: View {
    @Environment(\.presentationMode) var presentationMode
    
    var topics = ["Introductions", "Food", "Travel", "Feelings", "Daily Routine", "Hobbies", "Technology", "Movies"]
    
    var body: some View {
        ScrollView {
            VStack(spacing: 20) {
                // generate topic buttons
                ForEach(0..<topics.count, id: \.self) { index in
                    NavigationLink(destination: NewChatView(chatID: index)) {
                        Text(topics[index])
                            .font(.title2)
                            .frame(width: 200)
                            .padding()
                            .background(Color.red)
                            .foregroundColor(.white)
                            .cornerRadius(8)
                    }
                }
            }
            .padding(.top, 60)
            .background(Color.white)
        }
        .background(Color.white)
        .preferredColorScheme(.light)
        .navigationTitle("Select a Chat")
        .navigationBarBackButtonHidden(true)
                .toolbar {
                    // custom back button
                    ToolbarItem(placement: .navigationBarLeading) {
                        Button(action: {
                            presentationMode.wrappedValue.dismiss()
                        }) {
                            HStack {
                                Image(systemName: "chevron.left")
                                Text("Volver")
                            }
                            .foregroundColor(.red)
                        }
                    }
                }
    }
    
}

struct Message: Identifiable {
    let id = UUID()
    let text: String
    let isUser: Bool
}

struct NewChatView: View {
    var chatID: Int

    @State private var message: String = ""
    @State private var messages: [Message] = []
    @Environment(\.presentationMode) var presentationMode

    @State private var selectedMessageID: UUID? = nil
    @State private var selectedTranslation: String? = nil

    var body: some View {
        VStack {
            ScrollViewReader { proxy in
                            ScrollView {
                                VStack {
                                    // display list of messages
                                    MessageListView(
                                        messages: messages,
                                        selectedMessageID: selectedMessageID,
                                        onSelectMessage: handleMessageSelection
                                    )
                                }
                                .padding()
                            }
                            .onChange(of: messages.count) { _, _ in
                                scrollToBottom(proxy: proxy)
                            }
                        }

            Divider()

            // input field and send button
            HStack {
                TextField("Escribe tu mensaje...", text: $message)
                    .textFieldStyle(RoundedBorderTextFieldStyle())

                Button("Enviar") {
                    sendMessage()
                }
                .padding(.horizontal)
                .padding(.vertical, 8)
                .background(Color.red)
                .foregroundColor(.white)
                .cornerRadius(8)
            }
            .padding()
        }
        .background(Color.white)
        .preferredColorScheme(.light)
        .navigationTitle("Nuevos Mensajes")
        .navigationBarBackButtonHidden(true)
        .toolbar {
            // custom back button
            ToolbarItem(placement: .navigationBarLeading) {
                Button(action: {
                    presentationMode.wrappedValue.dismiss()
                }) {
                    HStack {
                        Image(systemName: "chevron.left")
                        Text("Volver")
                    }
                    .foregroundColor(.red)
                }
            }
        }
        .overlay(
            Group {
                if let id = selectedMessageID,
                   let translation = selectedTranslation {
                    // translation popup display
                    TranslationPopupView(text: translation)
                        .frame(width: 200)
                        .cornerRadius(8)
                        .shadow(radius: 4)
                        .zIndex(1)
                        .position(x: UIScreen.main.bounds.width / 2, y: 100)
                }
            }
        )
        .onAppear {
            sendQuestion(ID: chatID)
        }
    }
    
    // handle tap to select or deselect message
    private func handleMessageSelection(_ msg: Message) {
           if selectedMessageID == msg.id {
               selectedMessageID = nil
               selectedTranslation = nil
           } else {
               selectedMessageID = msg.id
               fetchTranslation(for: msg.text)
           }
       }

    // scroll to latest message
       private func scrollToBottom(proxy: ScrollViewProxy) {
           if let lastID = messages.last?.id {
               withAnimation {
                   proxy.scrollTo(lastID, anchor: .bottom)
               }
           }
       }

    // get english translation (uses API)
    private func fetchTranslation(for spanishText: String) {
        Translate.translate(text: spanishText, from: "es", to: "en") { translatedText in
            DispatchQueue.main.async {
                selectedTranslation = translatedText
            }
        }
    }

    // send user message and get translations
    private func sendMessage() {
        let userMessage = message.trimmingCharacters(in: .whitespacesAndNewlines)
        guard !userMessage.isEmpty else { return }

        messages.append(Message(text: userMessage, isUser: true))
        message = ""
        UIApplication.shared.sendAction(#selector(UIResponder.resignFirstResponder), to: nil, from: nil, for: nil)

        Translate.translate(text: userMessage, from: "es", to: "en") { translatedText in
            messages.append(Message(text: "You said: " + translatedText, isUser: false))

            Translate.translate(text: translatedText, from: "en", to: "es") { translatedText2 in
                messages.append(Message(text: "Alternative way: " + translatedText2, isUser: false))
                sendQuestion(ID: chatID)
            }
        }
    }

    // send a random question based on topic
    private func sendQuestion(ID: Int) {
        // Questions to ask, separated by topic
        let questions: [[String]] = [
            // introductions
                ["Â¿CÃ³mo te llamas?", "Â¿De dÃ³nde eres?", "Â¿CuÃ¡ntos aÃ±os tienes?", "Â¿DÃ³nde vives?", "Â¿Tienes hermanos o hermanas?", "Â¿CuÃ¡l es tu color favorito?", "Â¿QuÃ© te gusta hacer en tu tiempo libre?", "Â¿A quÃ© te dedicas?", "Â¿Hablas otros idiomas?", "Â¿CuÃ¡l es tu comida favorita?", "Â¿CuÃ¡l es tu pelÃ­cula favorita?", "Â¿Tienes mascotas?", "Â¿QuÃ© mÃºsica te gusta?", "Â¿CuÃ¡l es tu estaciÃ³n del aÃ±o preferida?", "Â¿Has viajado a otro paÃ­s?", "Â¿QuÃ© te gusta aprender?", "Â¿CuÃ¡l es tu deporte favorito?", "Â¿Prefieres el verano o el invierno?", "Â¿CÃ³mo es tu familia?", "Â¿CuÃ¡l es tu sueÃ±o o meta en la vida?"],
                // food
                [
                    "Â¿CuÃ¡l es tu comida favorita?",
                    "Â¿Te gusta cocinar?",
                    "Â¿QuÃ© desayunas normalmente?",
                    "Â¿Prefieres la comida dulce o salada?",
                    "Â¿Has probado comida espaÃ±ola?",
                    "Â¿QuÃ© frutas te gustan mÃ¡s?",
                    "Â¿CuÃ¡l es tu restaurante favorito?",
                    "Â¿QuÃ© plato sabes preparar bien?",
                    "Â¿Te gusta la comida picante?",
                    "Â¿CuÃ¡l es tu bebida preferida?",
                    "Â¿QuÃ© ingredientes usas en tu plato favorito?",
                    "Â¿Comes comida rÃ¡pida?",
                    "Â¿QuÃ© postre te gusta mÃ¡s?",
                    "Â¿Has probado comida tÃ­pica de otro paÃ­s?",
                    "Â¿QuÃ© comida no te gusta?",
                    "Â¿Prefieres comer en casa o en un restaurante?",
                    "Â¿QuÃ© tipo de comida comes para la cena?",
                    "Â¿CuÃ¡l es tu comida tradicional favorita?",
                    "Â¿Te gusta probar comidas nuevas?",
                    "Â¿CuÃ¡l es tu snack favorito?"
                ],
                //travel
                [
                    "Â¿Has viajado a otro paÃ­s?",
                    "Â¿CuÃ¡l fue tu Ãºltimo viaje?",
                    "Â¿Prefieres la playa o la montaÃ±a?",
                    "Â¿Te gusta viajar en aviÃ³n o en coche?",
                    "Â¿CuÃ¡l es tu destino soÃ±ado?",
                    "Â¿QuÃ© lugar quieres visitar en el futuro?",
                    "Â¿Has probado comidas nuevas cuando viajas?",
                    "Â¿Prefieres viajes cortos o largos?",
                    "Â¿Viajas solo o con amigos/familia?",
                    "Â¿QuÃ© recuerdos traes de tus viajes?",
                    "Â¿Te gusta hacer turismo cultural?",
                    "Â¿Has visitado una ciudad famosa?",
                    "Â¿QuÃ© llevas en tu maleta cuando viajas?",
                    "Â¿QuÃ© actividades te gusta hacer cuando viajas?",
                    "Â¿CuÃ¡l fue el viaje mÃ¡s divertido que hiciste?",
                    "Â¿Prefieres un hotel o un hostal?",
                    "Â¿Has tenido problemas durante un viaje?",
                    "Â¿QuÃ© idioma hablas cuando viajas?",
                    "Â¿Has hecho amigos en otros paÃ­ses?",
                    "Â¿CuÃ¡l es la mejor Ã©poca para viajar?"
                ],
                //feelings
                [
                    "Â¿CÃ³mo te sientes hoy?",
                    "Â¿QuÃ© te hace feliz?",
                    "Â¿QuÃ© te pone triste?",
                    "Â¿QuÃ© haces cuando estÃ¡s aburrido?",
                    "Â¿QuÃ© te enoja?",
                    "Â¿Te pones nervioso antes de un examen?",
                    "Â¿CÃ³mo expresas tu alegrÃ­a?",
                    "Â¿QuÃ© haces para relajarte?",
                    "Â¿QuÃ© te da miedo?",
                    "Â¿Te gusta estar solo o acompaÃ±ado?",
                    "Â¿QuÃ© te hace sentir orgulloso?",
                    "Â¿CÃ³mo reaccionas cuando estÃ¡s frustrado?",
                    "Â¿QuÃ© te motiva?",
                    "Â¿CÃ³mo ayudas a tus amigos cuando estÃ¡n tristes?",
                    "Â¿Prefieres hablar de tus sentimientos o escribirlos?",
                    "Â¿QuÃ© haces para mejorar tu Ã¡nimo?",
                    "Â¿CÃ³mo te sientes cuando haces ejercicio?",
                    "Â¿Te gusta sorprender a las personas?",
                    "Â¿CuÃ¡l fue la Ãºltima vez que te sentiste muy feliz?",
                    "Â¿QuÃ© te hace sentir tranquilo?"
                ],
                //daily routine
                [
                    "Â¿A quÃ© hora te despiertas?",
                    "Â¿QuÃ© haces por la maÃ±ana?",
                    "Â¿CÃ³mo es un dÃ­a tÃ­pico para ti?",
                    "Â¿A quÃ© hora desayunas?",
                    "Â¿Vas al trabajo o a la escuela?",
                    "Â¿QuÃ© haces despuÃ©s de trabajar/estudiar?",
                    "Â¿CuÃ¡ntas horas duermes?",
                    "Â¿QuÃ© haces para hacer ejercicio?",
                    "Â¿QuÃ© sueles comer para el almuerzo?",
                    "Â¿CuÃ¡ndo haces tus tareas o estudios?",
                    "Â¿Te gusta tu rutina diaria?",
                    "Â¿QuÃ© haces los fines de semana?",
                    "Â¿Prefieres levantarte temprano o tarde?",
                    "Â¿CuÃ¡nto tiempo pasas en redes sociales?",
                    "Â¿Haces alguna actividad creativa?",
                    "Â¿A quÃ© hora cenas?",
                    "Â¿Lees antes de dormir?",
                    "Â¿Te gusta planificar tu dÃ­a?",
                    "Â¿QuÃ© haces para relajarte por la noche?",
                    "Â¿CuÃ¡l es tu parte favorita del dÃ­a?"
                ],
                //hobbies
                [
                    "Â¿CuÃ¡les son tus pasatiempos favoritos?",
                    "Â¿Te gusta leer?",
                    "Â¿Practicas algÃºn deporte?",
                    "Â¿Tocas algÃºn instrumento musical?",
                    "Â¿Prefieres ver pelÃ­culas o series?",
                    "Â¿Te gusta pintar o dibujar?",
                    "Â¿QuÃ© haces en tu tiempo libre?",
                    "Â¿Te gusta cocinar?",
                    "Â¿Juegas videojuegos?",
                    "Â¿Sales con amigos los fines de semana?",
                    "Â¿Te gusta la fotografÃ­a?",
                    "Â¿QuÃ© tipo de mÃºsica escuchas?",
                    "Â¿Has probado algÃºn hobby nuevo recientemente?",
                    "Â¿Te gusta bailar?",
                    "Â¿Practicas yoga o meditaciÃ³n?",
                    "Â¿Te gusta hacer manualidades?",
                    "Â¿Tienes algÃºn hobby que te relaje?",
                    "Â¿Prefieres actividades al aire libre o en casa?",
                    "Â¿Has viajado para practicar un hobby?",
                    "Â¿CuÃ¡l es el hobby que mÃ¡s disfrutas?"
                ],
                //technology
                [
                    "Â¿QuÃ© tipo de telÃ©fono usas?",
                    "Â¿Prefieres Android o iPhone?",
                    "Â¿QuÃ© redes sociales usas mÃ¡s?",
                    "Â¿Te gusta jugar videojuegos?",
                    "Â¿Usas aplicaciones para aprender idiomas?",
                    "Â¿Has comprado algo en lÃ­nea?",
                    "Â¿QuÃ© opinas de la inteligencia artificial?",
                    "Â¿Te gusta la tecnologÃ­a o prefieres lo tradicional?",
                    "Â¿CuÃ¡nto tiempo pasas frente a la pantalla?",
                    "Â¿Usas una computadora para trabajar o estudiar?",
                    "Â¿Has usado realidad virtual?",
                    "Â¿Prefieres leer libros digitales o en papel?",
                    "Â¿QuÃ© aplicaciones usas para la productividad?",
                    "Â¿Te gusta la mÃºsica digital o en vinilo?",
                    "Â¿Usas asistentes de voz como Siri o Alexa?",
                    "Â¿Sabes programar?",
                    "Â¿CuÃ¡l fue el primer dispositivo tecnolÃ³gico que tuviste?",
                    "Â¿ConfÃ­as en la seguridad de internet?",
                    "Â¿QuÃ© tecnologÃ­a te gustarÃ­a que existiera?",
                    "Â¿CÃ³mo usas la tecnologÃ­a en tu vida diaria?"
                ],
                //movies
                [
                    "Â¿CuÃ¡l es tu pelÃ­cula favorita?",
                    "Â¿Prefieres pelÃ­culas de acciÃ³n o comedia?",
                    "Â¿Vas al cine con frecuencia?",
                    "Â¿Te gusta ver pelÃ­culas en casa o en el cine?",
                    "Â¿QuiÃ©n es tu actor o actriz favorito?",
                    "Â¿CuÃ¡l fue la Ãºltima pelÃ­cula que viste?",
                    "Â¿Te gustan las pelÃ­culas de terror?",
                    "Â¿Prefieres pelÃ­culas en espaÃ±ol o en otro idioma?",
                    "Â¿CuÃ¡l es tu director de cine favorito?",
                    "Â¿Has visto alguna pelÃ­cula espaÃ±ola?",
                    "Â¿QuÃ© gÃ©nero de pelÃ­culas te gusta mÃ¡s?",
                    "Â¿Te gusta ver series o pelÃ­culas?",
                    "Â¿QuÃ© pelÃ­cula te hizo llorar?",
                    "Â¿CuÃ¡l es la mejor pelÃ­cula que has visto este aÃ±o?",
                    "Â¿Te gusta ver pelÃ­culas con subtÃ­tulos?",
                    "Â¿Has visto pelÃ­culas clÃ¡sicas?",
                    "Â¿Prefieres pelÃ­culas largas o cortas?",
                    "Â¿Te gusta la animaciÃ³n?",
                    "Â¿QuÃ© pelÃ­cula recomendarÃ­as a un amigo?",
                    "Â¿Con quiÃ©n prefieres ver pelÃ­culas?"
                ]
            ]
        let randomNumber = Int.random(in: 0..<questions[ID].count)
        let question = questions[ID][randomNumber]
        messages.append(Message(text: question, isUser: false))
        message = ""
    }

    // popup view for translations
    struct TranslationPopupView: View {
        let text: String

        var body: some View {
            Text(text)
                .padding(10)
                .background(Color.white)
                .cornerRadius(8)
                .shadow(radius: 4)
                .frame(maxWidth: 200)
                .fixedSize(horizontal: false, vertical: true)
        }
    }
}

// list view of all messages
struct MessageListView: View {
    let messages: [Message]
    let selectedMessageID: UUID?
    let onSelectMessage: (Message) -> Void

    var body: some View {
        VStack(alignment: .leading, spacing: 8) {
            ForEach(messages) { msg in
                HStack {
                    if msg.isUser {
                        Spacer()
                        Text(msg.text)
                            .padding()
                            .background(Color.red.opacity(0.8))
                            .foregroundColor(.white)
                            .cornerRadius(12)
                    } else {
                        Text(msg.text)
                            .padding()
                            .background(Color.yellow.opacity(0.4))
                            .foregroundColor(.black)
                            .cornerRadius(12)
                            .onTapGesture {
                                onSelectMessage(msg)
                            }
                        Spacer()
                    }
                }
            }
        }
    }
}
    
    struct ContentView_Previews: PreviewProvider {
        static var previews: some View {
            ContentView()
        }
    }
    
